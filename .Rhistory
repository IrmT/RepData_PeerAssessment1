Week 2 assignment for coursera course Reproducible Research
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: load packages
library(rmarkdown)
library(dplyr)
library(lubridate)
library(lattice)
# Chunk 3: download data
# download the data set into working directory and unzip
url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(url,temp)
unzip(temp, "activity.csv")
# Chunk 4: load data
activity <- read.csv("activity.csv", header = TRUE)
# check data
head(activity, n = 10)
# Chunk 5: steps per day
dailysteps <- activity %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(total = sum(steps))
# histogram of total steps per day
hist(dailysteps$total,
main = "Steps per day",
xlab = "Number of steps per day",
breaks = 20)
# mean and median steps per day
summary(dailysteps)
# Chunk 6: avg daily activity
intervalsteps <- aggregate(steps ~ interval, activity, mean)
plot(intervalsteps$interval, intervalsteps$steps, type='l',
main="Average no. steps for all days", xlab="Interval",
ylab="Mean no. steps")
moststeps <- which.max(intervalsteps$steps)
intervalsteps[moststeps, ]
# Chunk 7: missing values
# function to count missing values in activity data
sapply(activity, function(x) sum(is.na(x)))
# Chunk 8: impute missing values
# My approach: fill in missing values with the average number of steps in an interval
activity_nona <- activity
missing <- is.na(activity_nona$steps) # logical vector with TRUE for NA
replace <- tapply(activity_nona$steps, activity_nona$interval, mean, na.rm=TRUE, simplify=TRUE)
activity_nona$steps[missing] <- replace[as.character(activity_nona$interval[missing])]
# check for missing values
sum(is.na(activity_nona$steps))
# Chunk 9: histogram w/o missing values
xx <- activity_nona %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(steps = sum(steps))
# check data set
head(xx, n = 10)
# histogram of total steps per day (with imputed values)
hist(xx$steps,
main = "Steps per day (imputed values)",
xlab = "Number of steps per day",
breaks = 20)
# Chunk 10: mean and median w/o missing values
# mean and median steps per day
summary(xx)
# Chunk 11: time series w/o missing values
# create a new factor level in the dataset with 2 levels: weekend and weekday
activity_nona$date <- ymd(activity_nona$date)
activity_nona$weekday <- weekdays(activity_nona$date)
activity_nona$weekend <- ifelse (activity_nona$weekday == "Samstag" | activity_nona$weekday == "Sonntag", "Weekend", "Weekday")
activity_nona$weekend <- as.factor(activity_nona$weekend)
activity_nona$weekday <- as.factor(activity_nona$weekday)
head(activity_nona,10)
activity_nona2 <- aggregate(activity_nona$steps, by=list(activity_nona$weekend, activity_nona$interval), mean)
names(activity_nona2)[1] ="weekend"
names(activity_nona2)[2] ="interval"
names(activity_nona2)[3] ="steps"
# make a time series panel plot
xyplot(steps ~ interval | weekend,
data = activity_nona2,
type = "l",
ylab = "No. steps")
